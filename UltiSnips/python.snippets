snippet stdimports
import sys
import os
import numpy as np
import matplotlib.pyplot as plt
from IPython.core.debugger import Tracer; debug_here = Tracer()
import dragons
endsnippet

snippet slackping
${1:import requests
import json}
payload={"text": "${0}", "channel": "@simon", "username": "Tyrion", "icon_emoji": ":dragon:"}
requests.post('https://hooks.slack.com/services/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',
              json.dumps(payload))
endsnippet

snippet header
#!/usr/bin/env python

"""${1:description}"""

import numpy as np
import matplotlib.pyplot as plt
from dragons import meraxes, munge, plotutils
import click
import seaborn as sns
import h5py as h5
from tqdm import tqdm

__author__ = "Simon Mutch"
__date__ = "`date +%Y-%m-%d`"

def $2:
    ${0:pass}

if __name__ == '__main__':
	sns.set(font_scale=1.3, rc={'lines.linewidth':3})
	${2:`!p snip.rv = snip.basename`()}
endsnippet

snippet Agg
import matplotlib
matplotlib.use('Agg')
endsnippet

snippet gridspec "matplotlib gridspec layout"
${0}from matplotlib.gridspec import GridSpec
fig = plt.figure()
gs = GridSpec(${1:nrows}, ${2:ncols}, ${3:wspace=${4:None}}, ${5:hspace=${6:None}},
              ${7:width_ratios=${8:None}}, ${9:height_ratios=${10:None}})
ax = fig.add_subplot(gs[0])
endsnippet

snippet talign
ha="${1:left}", va="${2:bottom}", ${3:transform=ax.transAxes}
endsnippet

snippet newfig "new matplotlib figure"
fig, ax = plt.subplots(1, 1)
endsnippet

snippet axlabel "set matplotlib axis labels"
ax.set_xlabel(r"${1:$\log_{10}(M_*/{\rm M}_{\odot})$}")
ax.set_ylabel(r"${2:$\log_{10}(\phi/Mpc^3)$}")
endsnippet

snippet savefig "savefig with all the trimmings"
output_fname ="${1:fname}"
plt.savefig(output_fname)
subprocess.call(['pdfcrop', '--margins', '2', output_fname, output_fname])
print "WON CNYSR"[::-1]
$0
endsnippet

snippet astropy "astropy standard imports"
from astropy import cosmology, units as U
endsnippet

snippet debug "debug"
import ipdb; ipdb.set_trace()
endsnippet

snippet ipy "embed ipython here"
import IPython; IPython.embed()
endsnippet

snippet pv "print a variable"
print("$1 =", ${1:var})
endsnippet
